#summary System# wiki index page
#labels Featured,Phase-Deploy

= Welcome to the System# wiki =

== Installation ==

=== Platform ===

System# is being developed using Visual Studio and the .NET framework. That's why we currently stick to the Windows environment. Although System# should theoretically run on MONO, platform independence is currently not the main focus of the project. However, you are encouraged to give us feedback on platform-specific issues.

=== Prerequisites ===

Before you install System#, please make sure your machines meet the following prerequisites:

  * *Visual Studio 2010 SP1*. If you're missing Service Pack 1, try http://www.microsoft.com/download/en/details.aspx?id=23691.

  * *.NET Framework 4* (usually installed along with Visual Studio 2010)

  * *Reactive Extensions (Rx)* Try http://www.microsoft.com/download/en/details.aspx?id=26649 to obtain the Rx SDK.

  * Recommended, but not mandatory: *Code Contracts*. Try http://research.microsoft.com/en-us/projects/contracts/.

  * Only if you want to rebuild System# from scratch: The *boost libraries, v1.46.1* Try http://www.boost.org/.

  * System#'s supports Xilinx IP Cores and generates a Xilinx ISE project along with the VHDL sources. So *Xilinx ISE Design Suite 12.x* or *13.x* is recommended (no matter what edition).


=== Download and Setup ===

The easiest way to install System#: Change to the [http://code.google.com/p/systemsharp/downloads/list Downloads] tab, obtain the most recent Windows Installer download and launch it. The download will contain the complete System# sources, pre-compiled binaries and a Visual Studio solution with some examples.

= Getting Started =

The first thing you may want to do is to browse the examples. These will give you a good starting point to see how things work in System#. If you installed System# using the Windows Installer download, there will be a shortcut in your start menu: Browse for _Programs_, _FZI Forschungszentrum Informatik_, _System#_, _Open Examples.sln_. You will find this Visual Studio solution in a _System#_-prefixed sub-directory of your personal _Documents_ folder.

Most of the examples are composed of two execution phases: The first phase is a delta-cycle simulation. During the simulation, you can observe the example design action by its console outputs (sorry, not wave viewer yet). So far, nothing special. The second phase constitutes the actual magic: The design is being analyzed by the System# reflection engine and then transformed into VHDL. The examples hard-code the output directory to `.\hdl_output`, so you will find the generated sources in 

`[PATH_TO_SYSTEM#]\SystemSharp\Example_[EXAMPLE_NAME]\bin\[CONFIGURATION]\hdl_output`

in which `[CONFIGURATION]` is your current build configuration (either `Debug` or `Release`).